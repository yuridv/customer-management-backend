{
  "env": {
    "node": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "rules": {
    "semi": ["warn", "always"],                // Avisa se faltar ponto e vírgula
    "eqeqeq": ["error", "always"],             // Obriga uso de ===/!== no lugar de ==/!=
    "no-unused-vars": "warn",                  // Avisa se tiver variável não usada
    "no-var": "error",                         // Proíbe usar `var` (use let/const)
    "prefer-const": "warn",                    // Sugere `const` quando variável não muda
    "quotes": ["error", "single"],             // Força aspas simples (exceto em JSON, claro)
    "indent": ["error", 2],                    // Requer indentação de 2 espaços
    "comma-dangle": ["error", "never"],        // Proíbe vírgula no final de lista (último item)
    "object-curly-spacing": ["error", "always"], // Força espaço entre chaves: { chave: valor }
    "array-bracket-spacing": ["error", "always"], // Força espaço dentro de colchetes: [ 1, 2 ]
    "space-before-function-paren": ["error", "never"], // Proíbe espaço entre function e ()
    "arrow-spacing": ["error", { "before": true, "after": true }], // Espaços ao redor do =>
    "max-lines": ["warn", 300],                // Avisa se arquivo tiver mais de 300 linhas
    "complexity": ["warn", 20],                // Avisa se função for muito complexa (muitos caminhos)
    "max-depth": ["warn", 4],                  // Limita profundidade (aninhamento de blocos)
    "max-params": ["warn", 5],                 // Avisa se função tem muitos parâmetros
    "no-nested-ternary": "warn",               // Desencoraja ternários dentro de ternários
    "no-shadow": "warn",                       // Avisa se variável sobrescreve outra do escopo externo
    "no-async-promise-executor": "off"         // Desativa regra que proíbe `async` dentro de `new Promise`
  }
}